//
//  MessageBoxListViewController.m
//  APP
//
//  Created by PerryChen on 6/16/15.
//  Copyright (c) 2015 carret. All rights reserved.
//

#import "MessageBoxListViewController.h"
#import "MsgListCell.h"
#import "ConsultPTP.h"
#import "ConsultPTPR.h"
#import "ConsultPTPModel.h"
#import "SVProgressHUD.h"
#import "QWGlobalManager.h"
#import "QWUnreadCountModel.h"
#import "MsgNotiListViewController.h"
#import "ReturnIndexView.h"
#import "ChatViewController.h"

#import "QWYSViewController.h"
#import "MGSwipeButton.h"

#import "QWMessage.h"
#import "ExpertInfoViewController.h"

@interface MessageBoxListViewController ()<UITableViewDataSource, UITableViewDelegate,MGSwipeTableCellDelegate, ExpertInfoHiddenRedPointDelegate>
@property (weak, nonatomic) IBOutlet UITableView *tbViewContent;
@property (strong, nonatomic) NSMutableArray *arrMsgList;
@property (strong, nonatomic) NSMutableArray *arrServer;
@property (assign, nonatomic) BOOL isScrolling;
@property (strong, nonatomic) ReturnIndexView *indexView;
@property (strong, nonatomic) NSMutableDictionary *controllerArr;
@property (assign, nonatomic) CGPoint scrollPointOffset;
@end

@implementation MessageBoxListViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    self.navigationItem.title = @"消息";
    self.controllerArr = [NSMutableDictionary dictionary];
    [self setUpRightItem];
    self.scrollPointOffset = CGPointZero;
    
    __weak typeof (self) weakSelf = self;
    [self enableSimpleRefresh:self.tbViewContent block:^(SRRefreshView *sender) {
        [weakSelf.tbViewContent headerEndRefreshing];
        if(QWGLOBALMANAGER.currentNetWork == NotReachable)
        {
            [SVProgressHUD showErrorWithStatus:@"网络未连接，请稍后再试" duration:0.8f];
            return;
        }
        [weakSelf refreshConsultList];
    }];
    [self getAllCachedP2PList];
    [self.tbViewContent reloadData];
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self.tbViewContent reloadData];
    [self refreshConsultList];
    // 获取全部的缓存点对点消息列表
    //    [self getAllCachedP2PList];
    //    [self.tbViewContent reloadData];
    //    [self.tbViewContent scrollRectToVisible:CGRectMake(self.scrollPointOffset.x, self.scrollPointOffset.y, 0, 0) animated:NO];
}

#pragma mark - Data Process

- (void)getAllCachedP2PList
{
    self.arrMsgList = [NSMutableArray arrayWithArray:[PharMsgModel getArrayFromDBWithWhere:nil WithorderBy:@" latestTime desc"]];
}

- (void)setAllMsgReaded
{
    if (!QWGLOBALMANAGER.loginStatus) {
        return;
    }
    ConsultModelR *modelR = [ConsultModelR new];
    modelR.token = QWGLOBALMANAGER.configure.userToken;
    [Consult setAllReadMsgBoxListWithParam:modelR success:^(ConsultModel *responModel) {
        NSArray *array =  [OfficialMessages getArrayFromDBWithWhere:nil];
        for (OfficialMessages *msg in array) {
            msg.issend = @"1";
            [OfficialMessages updateObjToDB:msg WithKey:msg.UUID];
        }
        NSArray *arrConsultList = [HistoryMessages getArrayFromDBWithWhere:nil];
        for (HistoryMessages *modelMsg in arrConsultList) {
            modelMsg.unreadCounts = @"0";
            modelMsg.systemUnreadCounts = @"0";
            if ([modelMsg.isShowRedPoint isEqualToString:@"1"]) {
                modelMsg.isShowRedPoint = @"0";
            }
            [HistoryMessages updateObjToDB:modelMsg WithKey:modelMsg.relatedid];
        }
        
        NSArray *arrNotiList = [MsgNotifyListModel getArrayFromDBWithWhere:nil];
        for (MsgNotifyListModel *modelNoti in arrNotiList) {
            modelNoti.unreadCounts = @"0";
            modelNoti.systemUnreadCounts = @"0";
            modelNoti.showRedPoint = @"0";
            [MsgNotifyListModel updateObjToDB:modelNoti WithKey:modelNoti.relatedid];
        }
        
        NSArray *arrCouponList = [CouponNotiModel getArrayFromDBWithWhere:nil];
        for (CouponNotiModel *modelCoupon in arrCouponList) {
            modelCoupon.unreadCounts = @"0";
            modelCoupon.showRedPoint = @"0";
            [CouponNotiModel updateObjToDB:modelCoupon WithKey:modelCoupon.messageId];
        }
        
        NSArray *arrP2PList = [PharMsgModel getArrayFromDBWithWhere:nil];
        for (PharMsgModel *modelPhar in arrP2PList) {
            modelPhar.unreadCounts = @"0";
            modelPhar.systemUnreadCounts = @"0";
            [PharMsgModel updateObjToDB:modelPhar WithKey:modelPhar.branchId];
        }
        
        NSArray *arrOrderList = [OrderNotiModel getArrayFromDBWithWhere:nil];
        for (OrderNotiModel *modelOrder in arrOrderList) {
            modelOrder.unreadCounts = @"0";
            [OrderNotiModel updateObjToDB:modelOrder WithKey:modelOrder.messageId];
        }
        
        //TODO: 更新缓存 comment by perry
        
        [self getAllCachedP2PList];
        [self.tbViewContent reloadData];
        
        QWUnreadCountModel *modelUnread = [QWGLOBALMANAGER getUnreadModel];
        modelUnread.count_NotifyListUnread = @"0";
        modelUnread.count_PTPUnread = @"0";
        modelUnread.count_OfficialUnread = @"0";
        modelUnread.count_CouponUnread = @"0";
        modelUnread.count_orderUnread = @"0";
        [QWUnreadCountModel updateObjToDB:modelUnread WithKey:modelUnread.passport];
        [QWGLOBALMANAGER updateRedPoint];
    } failure:^(HttpException *e) {
        
    }];
}

#pragma mark - Right Item Methods
- (void)setUpRightItem
{
    UIBarButtonItem *fixed = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace target:nil action:nil];
    fixed.width = -6;
    
    UIBarButtonItem *rightItem = [[UIBarButtonItem alloc] initWithImage:[UIImage imageNamed:@"icon-unfold.PNG"] style:UIBarButtonItemStylePlain target:self action:@selector(returnIndex)];
    self.navigationItem.rightBarButtonItems = @[fixed,rightItem];
}

- (void)returnIndex
{
    self.indexView = [[ReturnIndexView alloc] initWithImage:@[@"icon_check all_news"] title:@[@"全部已读"]];
//    self.indexView = [ReturnIndexView sharedManagerWithImage:@[@"icon mark.PNG"] title:@[@"全部已读"] passValue:-1];
    self.indexView.delegate = self;
    [self.indexView show];
}
- (void)RetunIndexView:(ReturnIndexView *)ReturnIndexView didSelectedIndex:(NSIndexPath *)indexPath
{
    [self.indexView hide];
    if (indexPath.row == 0) {
        
        [self setAllMsgReaded];

    } else if (indexPath.row == 1) {
        
        [self.navigationController popToRootViewControllerAnimated:YES];
        [self performSelector:@selector(delayPopToHome) withObject:nil afterDelay:0.01];
    }
}

- (void)delayPopToHome
{
    [QWGLOBALMANAGER.tabBar setSelectedIndex:0];
}

- (void)jumoToCircleMessage
{
    ExpertInfoViewController *vc = [[ExpertInfoViewController alloc] init];
    vc.hidesBottomBarWhenPushed = YES;
    //    vc.delegate = self;
    [self.navigationController pushViewController:vc animated:YES];
}

#pragma mark - Http service
- (void)refreshConsultList
{
    //全量拉取
    GetAllSessionModelR *modelR = [GetAllSessionModelR new];
    modelR.token = QWGLOBALMANAGER.configure.userToken;
    modelR.point = @"0";
    modelR.view = @"10000";
    modelR.viewType = @"-1";
    [ConsultPTP getAllSessionList:modelR success:^(MessageList *responModel) {
        self.arrServer = responModel.messages;
        QWGLOBALMANAGER.lastTimestampForptpMsg = responModel.lastTimestamp;
        [self syncDBtoLatest:responModel];
        [self getAllCachedP2PList];
        [self.tbViewContent reloadData];
    } failure:^(HttpException *e) {
        
    }];
}

- (void)syncDBtoLatest:(MessageList *)listModel
{
    __weak typeof (self) weakSelf = self;
   /**
     *  同步全量拉取的消息盒子数据到本地数据库
     */
    [QWGLOBALMANAGER sycMsgBoxListData:listModel];
    [QWGLOBALMANAGER updateRedPoint];
}

#pragma mark - UITableView methods
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    MsgListCell *cell = [tableView dequeueReusableCellWithIdentifier:@"MsgListCell"];
    PharMsgModel *msgModel = self.arrMsgList[indexPath.row];
    cell.swipeDelegate = self;
    [cell setCell:msgModel];
    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 60.0f;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.arrMsgList.count;
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    self.scrollPointOffset = self.tbViewContent.contentOffset;
    if (QWGLOBALMANAGER.loginStatus) {
        PharMsgModel* msg = self.arrMsgList[indexPath.row];
        NSMutableDictionary *tdParams = [NSMutableDictionary dictionary];
        [QWGLOBALMANAGER statisticsEventId:@"x_xx_dj" withLable:@"消息" withParams:tdParams];
        if ([msg.type isEqualToString:@"3"]) {          // p2p 详情
            NSString *indexStr = [NSString stringWithFormat:@"%@",msg.sessionId];
            ChatViewController *demoViewController = nil;
            if ([self.controllerArr objectForKey:indexStr]) {
                demoViewController = [self.controllerArr objectForKey:indexStr];
            }else
            {
                demoViewController = [[UIStoryboard storyboardWithName:@"ChatViewController" bundle:[NSBundle mainBundle]] instantiateViewControllerWithIdentifier:@"ChatViewController"];
                demoViewController.sendConsultType = Enum_SendConsult_Common;
                [self.controllerArr setValue:demoViewController forKey:indexStr];
            }
            
            if(msg) {
                QWGLOBALMANAGER.unReadCount = QWGLOBALMANAGER.unReadCount - [msg.unreadCounts intValue];
                QWGLOBALMANAGER.unReadCount = QWGLOBALMANAGER.unReadCount - [msg.systemUnreadCounts intValue];
                QWUnreadCountModel *modelUnread = [QWGLOBALMANAGER getUnreadModel];
                modelUnread.count_PTPUnread = [NSString stringWithFormat:@"%d",[modelUnread.count_PTPUnread intValue] - [msg.unreadCounts intValue] - [msg.systemUnreadCounts intValue]];
                [QWUnreadCountModel updateObjToDB:modelUnread WithKey:QWGLOBALMANAGER.configure.passPort];
                msg.unreadCounts = @"0";
                msg.systemUnreadCounts = @"0";
                [PharMsgModel updateObjToDB:msg WithKey:msg.branchId];
                [QWGLOBALMANAGER updateRedPoint];
            }
            demoViewController.sessionID = msg.sessionId;
            demoViewController.branchName = msg.branchName;
            demoViewController.sendConsultType = Enum_SendConsult_Common;
            demoViewController.avatarUrl = msg.imgUrl;
            demoViewController.branchId = msg.branchId;
            demoViewController.hidesBottomBarWhenPushed = YES;
            [self.navigationController pushViewController:demoViewController animated:YES];
        } else if ([msg.type isEqualToString:@"1"]) {
            //消息盒子里跳入全维药事
            NSString *indexStr = [NSString stringWithFormat:@"%ld",(long)indexPath.row];
            QWYSViewController *demoViewController=nil;
            if ([self.controllerArr objectForKey:indexStr]) {
                demoViewController = [self.controllerArr objectForKey:indexStr];
            }else
            {
                demoViewController = [[UIStoryboard storyboardWithName:@"QWYSViewController" bundle:nil] instantiateViewControllerWithIdentifier:@"QWYSViewController"];
            }
            // 全维官方未读数
            NSUInteger officalUnread = [OfficialMessages getcountFromDBWithWhere:@"issend = 0"];
            QWGLOBALMANAGER.unReadCount = QWGLOBALMANAGER.unReadCount - officalUnread;
            QWUnreadCountModel *modelUnread = [QWGLOBALMANAGER getUnreadModel];
            modelUnread.count_OfficialUnread = @"0";
            [QWUnreadCountModel updateObjToDB:modelUnread WithKey:QWGLOBALMANAGER.configure.passPort];
            msg.unreadCounts = @"0";
            msg.systemUnreadCounts = @"0";
            msg.type = @"1";
            [PharMsgModel updateObjToDB:msg WithKey:msg.branchId];
            
            [OfficialMessages updateSetToDB:@"issend = '1'" WithWhere:nil];
            demoViewController.hidesBottomBarWhenPushed = YES;
            [QWGLOBALMANAGER updateRedPoint];
            [self.navigationController pushViewController:demoViewController animated:YES];
            // 消息类型：1全维药事 2咨询 3即时聊天 4消息通知 5系统通知 6订单通知列表
        } else if ([msg.type isEqualToString:@"2"]){
            [self performSegueWithIdentifier:@"seguePushToNoti" sender:indexPath];
        } else if ([msg.type isEqualToString:@"4"]){//消息通知
            [self performSegueWithIdentifier:@"seguePushToCoupon" sender:indexPath];
        } else if ([msg.type isEqualToString:@"5"]){
            [self performSegueWithIdentifier:@"seguePushToSys" sender:indexPath];
        } else if ([msg.type isEqualToString:@"6"]){    // 订单通知列表
            [self performSegueWithIdentifier:@"seguePushToOrderList" sender:indexPath];
        }
        else if ([msg.type isEqualToString:@"7"]){    // 圈子消息
            [self jumoToCircleMessage];
        }
    }
}

#pragma mark - Notification
- (void)updateOfficialMessage
{
    PharMsgModel *modelOfficialMsg = [PharMsgModel getObjFromDBWithWhere:@"type = 1"];
    NSInteger intUnreadCounts = [OfficialMessages getcountFromDBWithWhere:@"issend = 0"];
    if (modelOfficialMsg) {
        modelOfficialMsg.unreadCounts = [NSString stringWithFormat:@"%d",intUnreadCounts];
        [PharMsgModel updateObjToDB:modelOfficialMsg WithKey:modelOfficialMsg.branchId];
        [self.tbViewContent reloadData];
        modelOfficialMsg.unreadCounts = [NSString stringWithFormat:@"%d",intUnreadCounts];

        QWUnreadCountModel *modelUnread = [QWGLOBALMANAGER getUnreadModel];
        
        modelUnread.count_OfficialUnread = [NSString stringWithFormat:@"%d",intUnreadCounts];
        [QWUnreadCountModel updateObjToDB:modelUnread WithKey:QWGLOBALMANAGER.configure.passPort];
        [QWGLOBALMANAGER updateRedPoint];
    }
}

- (void)getNotifType:(Enum_Notification_Type)type data:(id)data target:(id)obj
{
    if (type == NotifMessageOfficial) {
        [self updateOfficialMessage];
    } else if (type == NotiMessagePTPUpdateList) {
        [self getAllCachedP2PList];
        [self.tbViewContent reloadData];
    } else if (type == NotiMessageUpdateMsgNotiList) {
        [self getAllCachedP2PList];
        [self.tbViewContent reloadData];
    } else if (type == NotiMessagePTPNeedUpdate) {
        [self getAllCachedP2PList];
        [self.tbViewContent reloadData];
    } else if (type == NotiReleaseTimer) {
        [self.controllerArr removeAllObjects];
    } else if (type == NotiMessageBoxUpdateList) {
        [self getAllCachedP2PList];
        [self.tbViewContent reloadData];
    } else if (type == NotifIMCenterSended) {
        NSDictionary *dicData = (NSDictionary *)data;
        NSString *indexStr = [NSString stringWithFormat:@"%@",dicData[@"sessionID"]];
        if ([self.controllerArr objectForKey:indexStr] != nil) {
            [self.controllerArr removeObjectForKey:indexStr];
        }
    }
    

}

#pragma mark - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    // Get the new view controller using [segue destinationViewController].
    // Pass the selected object to the new view controller.
    if ([segue.identifier isEqualToString:@"seguePushToNoti"]) {
        
    }
}
//  add by  shen

-(NSArray *) createRightButtons: (int) number
{
    NSMutableArray * result = [NSMutableArray array];
    NSString* titles[2] = {@"删除"};
    UIColor * colors[2] = {RGBHex(qwColor3)};
    for (int i = 0; i < number; ++i)
    {
        MGSwipeButton * button = [MGSwipeButton buttonWithTitle:titles[i] backgroundColor:colors[i] callback:^BOOL(MGSwipeTableCell * sender){
            return YES;
        }];
        if(i == 1) {
            [button setTitleColor:RGBHex(qwColor5) forState:UIControlStateNormal];
        }
        [result addObject:button];
    }
    return result;
}



#pragma mark -
#pragma mark MGSwipeTableCellDelegate
-(NSArray*) swipeTableCell:(MGSwipeTableCell*)cell
  swipeButtonsForDirection:(MGSwipeDirection)direction
             swipeSettings:(MGSwipeSettings*)swipeSettings
         expansionSettings:(MGSwipeExpansionSettings*)expansionSettings;
{
    
    if (direction == MGSwipeDirectionRightToLeft)
    {
        
        return [self createRightButtons:1];
        
    }
    return nil;
}

-(BOOL) swipeTableCell:(MGSwipeTableCell*)cell tappedButtonAtIndex:(NSInteger)index direction:(MGSwipeDirection)direction fromExpansion:(BOOL)fromExpansion
{
    NSIndexPath *  indexPath = [self.tbViewContent indexPathForCell:cell];
    //删除事件
    if (QWGLOBALMANAGER.currentNetWork == kNotReachable) {
        [SVProgressHUD showErrorWithStatus:@"网络未连接，请重试" duration:0.8f];
        return NO;
    }
    PharMsgModel *msgModel = self.arrMsgList[indexPath.row];
    [self.arrMsgList removeObject:msgModel];
    [self.tbViewContent reloadData];
    RemoveByTypeR * model = [RemoveByTypeR new];
    model.type = msgModel.type;
    model.token = QWGLOBALMANAGER.configure.userToken;
    model.sessionId = msgModel.sessionId;
    [ConsultPTP removeByType:model success:^(ApiBody *responModel) {
        
    } failure:^(HttpException *e) {
        
    }];
    QWUnreadCountModel *modelUnread = [QWGLOBALMANAGER getUnreadModel];
    
    if ([model.type integerValue] ==1) {
        //              NSString *  where=[NSString stringWithFormat:@"type = '%@' ", model.type];
        NSString *  wherePtp=[NSString stringWithFormat:@"branchId = '%@' ", msgModel.branchId];
        [PharMsgModel deleteObjFromDBWithWhere:wherePtp];
        [OfficialMessages deleteAllObjFromDB];
        modelUnread.count_OfficialUnread = [NSString stringWithFormat:@"%ld",[modelUnread.count_OfficialUnread integerValue]-[msgModel.unreadCounts integerValue]];
    }else if([model.type integerValue] ==2)
    {
        NSString *  where=[NSString stringWithFormat:@"type = '%@' ", model.type];
        [PharMsgModel deleteObjFromDBWithWhere:where];
        modelUnread.count_NotifyListUnread = [NSString stringWithFormat:@"%d",[modelUnread.count_PTPUnread intValue] - [msgModel.unreadCounts intValue] - [msgModel.systemUnreadCounts intValue]];
        
    }else if([model.type integerValue] ==3)
    {
        
        NSString *  wherePtp=[NSString stringWithFormat:@"branchId = '%@' ", msgModel.branchId];
        [PharMsgModel deleteObjFromDBWithWhere:wherePtp];
        modelUnread.count_PTPUnread = [NSString stringWithFormat:@"%d",[modelUnread.count_PTPUnread intValue] - [msgModel.unreadCounts intValue] - [msgModel.systemUnreadCounts intValue]];
        NSString *  where=[NSString stringWithFormat:@"sendname = '%@' ", msgModel.sessionId];
        [QWPTPMessage deleteObjFromDBWithWhere:where];
    }else if([model.type integerValue] ==4)     // 优惠通知列表
    {
        NSString *  where=[NSString stringWithFormat:@"type = '%@' ", model.type];
        [PharMsgModel deleteObjFromDBWithWhere:where];
        modelUnread.count_CouponUnread = [NSString stringWithFormat:@"%d",[modelUnread.count_CouponUnread intValue] - [msgModel.unreadCounts intValue] - [msgModel.systemUnreadCounts intValue]];
        
    }else if([model.type integerValue] ==6) // 订单通知列表
    {
        NSString *  where=[NSString stringWithFormat:@"type = '%@' ", model.type];
        [PharMsgModel deleteObjFromDBWithWhere:where];
        modelUnread.count_orderUnread = [NSString stringWithFormat:@"%d",[modelUnread.count_orderUnread intValue] - [msgModel.unreadCounts intValue] - [msgModel.systemUnreadCounts intValue]];
        
    }
    [QWUnreadCountModel updateObjToDB:modelUnread WithKey:QWGLOBALMANAGER.configure.passPort];
    
    [QWGLOBALMANAGER updateUnreadCount:[NSString stringWithFormat:@"%ld",(long)[QWGLOBALMANAGER getAllUnreadCount]]];
    [QWGLOBALMANAGER updateRedPoint];

    
//    UIAlertView *alertView = [[UIAlertView alloc] initWithTitle:@"确定要删除该记录？" message:nil delegate:self cancelButtonTitle:@"取消" otherButtonTitles:@"确定", nil];
//    alertView.delegate = self;
//    alertView.tag = indexPath.row;
//    [alertView show];
    
    return YES;
}



@end
