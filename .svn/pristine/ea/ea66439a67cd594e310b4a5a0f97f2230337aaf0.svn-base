//
//  CouponQuanListViewController.m
//  APP
//
//  Created by 李坚 on 15/8/22.
//  Copyright (c) 2015年 carret. All rights reserved.
//

#import "CouponQuanListViewController.h"
#import "Coupon.h"
#import "SVProgressHUD.h"
#import "VFourCouponQuanTableViewCell.h"
#import "MyCouponDetailViewController.h"

static NSString *const Identifier = @"VFourCouponQuanTableViewCell";

@interface CouponQuanListViewController ()<UITableViewDataSource,UITableViewDelegate>{
    
    int currentPage;
}

@property (nonatomic, strong) UITableView *mainTableView;

@property (nonatomic, strong) NSMutableArray *dataArray;


@end

@implementation CouponQuanListViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    currentPage = 1;
    self.dataArray = [NSMutableArray new];
    self.mainTableView = [[UITableView alloc]initWithFrame:CGRectMake(0, 0, APP_W, APP_H - NAV_H - 38)];
    self.mainTableView.backgroundColor = RGBHex(qwColor11);
    self.mainTableView.dataSource = self;
    self.mainTableView.delegate = self;
    self.mainTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [self.mainTableView registerNib:[UINib nibWithNibName:Identifier bundle:nil] forCellReuseIdentifier:Identifier];

    UIView *footerView = [[UIView alloc]init];
    footerView.backgroundColor = RGBHex(qwColor11);
    self.mainTableView.tableFooterView = footerView;
    [self.mainTableView addFooterWithTarget:self action:@selector(refreshData)];
    [self.view addSubview:self.mainTableView];
}

- (void)viewWillAppear:(BOOL)animated{
    [super viewWillAppear:animated];
    
    
}

#pragma mark - 重新加载新数据，用于SliderView切换Tab或下拉刷新数据
- (void)resetData{

    currentPage = 1;
    if(QWGLOBALMANAGER.currentNetWork == kNotReachable){
        [self loadHistoryData];

    }else{
        [self loadCouponQuanData];
   
    }
}

- (void)loadHistoryData{
    
    [self removeInfoView];
    if(self.type == Enum_CouponQuan_HasPicked){
        self.dataArray = [NSMutableArray arrayWithArray:[MyCouponVoModel getArrayFromDBWithWhere:@"status=1 or status=2"]];
    }
    if(self.type == Enum_CouponQuan_HasUsed){
        self.dataArray = [NSMutableArray arrayWithArray:[MyCouponVoModel getArrayFromDBWithWhere:@"status=3"]];
    }
    if(self.type == Enum_CouponQuan_HasOverdDate){
        self.dataArray = [NSMutableArray arrayWithArray:[MyCouponVoModel getArrayFromDBWithWhere:@"status=4"]];
    }
    if(self.dataArray.count == 0){
        [self showInfoView:kWarning29 image:@"网络信号icon"];
        return;
    }
    
    [self.mainTableView reloadData];
    
}


#pragma mark - 加载更多
- (void)refreshData{
    
    currentPage += 1;
    [self removeInfoView];
    HttpClientMgr.progressEnabled = NO;
    [self loadCouponQuanData];
}

#pragma mark - 根据枚举类型请求数据
- (void)loadCouponQuanData{
    
    myCouponQuanModelR *modelR = [myCouponQuanModelR new];
    modelR.token = QWGLOBALMANAGER.configure.userToken;
    modelR.page = @(currentPage);
    modelR.pageSize = @10;

    [self removeInfoView];
    if(self.type == Enum_CouponQuan_HasPicked){
        [QWGLOBALMANAGER statisticsEventId:@"我的优惠券_可使用" withLable:@"我的优惠券列表" withParams:nil];
        [self loadPickedQuan:modelR];
    }
    if(self.type == Enum_CouponQuan_HasUsed){
        [QWGLOBALMANAGER statisticsEventId:@"我的优惠券_已使用" withLable:@"我的优惠券列表" withParams:nil];
        [self loadUsedQuan:modelR];
    }
    if(self.type == Enum_CouponQuan_HasOverdDate){
        [QWGLOBALMANAGER statisticsEventId:@"我的优惠券_已过期" withLable:@"我的优惠券列表" withParams:nil];
        [self loadDatedQuan:modelR];
    }
}

#pragma mark - 已领取数据HTTPRequest
- (void)loadPickedQuan:(myCouponQuanModelR *)modelR{
    
    [Coupon myCouponQuanPicked:modelR success:^(id obj) {
        
        MyOverdueCouponVoListModel *couponList = (MyOverdueCouponVoListModel *)obj;
        if(currentPage == 1 && couponList.coupons.count == 0){
            [self showInfoView:@"可以使用的优惠券会出现在这里" image:@"ic_img_fail"];
        }
        if(couponList.coupons == nil){
            currentPage -= 1;
            [self.mainTableView.footer setCanLoadMore:NO];
            
        }else{
            
            if(currentPage == 1){
                
                self.dataArray = [NSMutableArray arrayWithArray:couponList.coupons];
                [self.mainTableView reloadData];
            }else{
            
                [self.dataArray addObjectsFromArray:couponList.coupons];
                [self.mainTableView reloadData];
            }
            if(currentPage == 1){
              
                [MyCouponVoModel deleteWithWhere:@"status=1 or status=2"];
                
             
                [MyCouponVoModel insertToDBWithArray:couponList.coupons filter:^(id model, BOOL inseted, BOOL *rollback) {
                    
                }];
            }
            
            
        }
        
        [self.mainTableView footerEndRefreshing];
        [self.mainTableView headerEndRefreshing];
        NSString *hasContent;
        if(_dataArray > 0){
            hasContent = @"有内容";
        }else {
            hasContent = @"无内容";
        }
        NSMutableDictionary *tdParams = [NSMutableDictionary dictionary];
        tdParams[@"有无内容"]=hasContent;
        [QWGLOBALMANAGER statisticsEventId:@"x_wd_yhq" withLable:@"优惠券" withParams:tdParams];
    } failure:^(HttpException *e) {
        
        [self.mainTableView footerEndRefreshing];
        [self.mainTableView headerEndRefreshing];
    }];
}

#pragma mark - 已使用数据HTTPRequest
- (void)loadUsedQuan:(myCouponQuanModelR *)modelR{
    
    [Coupon myCouponQuanUsed:modelR success:^(id obj) {
        
        MyOverdueCouponVoListModel *couponList = (MyOverdueCouponVoListModel *)obj;
        if(currentPage == 1 && couponList.coupons.count == 0){
            [self showInfoView:@"暂无已使用优惠" image:@"ic_img_fail"];
        }
        if(couponList.coupons == nil){
            currentPage -= 1;
            [self.mainTableView.footer setCanLoadMore:NO];
        }else{
    
            if(currentPage == 1){
                
                self.dataArray = [NSMutableArray arrayWithArray:couponList.coupons];
                [self.mainTableView reloadData];
            }else{
                
                [self.dataArray addObjectsFromArray:couponList.coupons];
                [self.mainTableView reloadData];
            }
            if(currentPage == 1){
                
                [MyCouponVoModel deleteWithWhere:@"status=3"];
                
                [MyCouponVoModel insertToDBWithArray:couponList.coupons filter:^(id model, BOOL inseted, BOOL *rollback) {
                    
                }];
            }
        }
   
        [self.mainTableView footerEndRefreshing];
        [self.mainTableView headerEndRefreshing];
        NSString *hasContent;
        if(_dataArray > 0){
            hasContent = @"有内容";
        }else {
            hasContent = @"无内容";
        }
        NSMutableDictionary *tdParams = [NSMutableDictionary dictionary];
        tdParams[@"有无内容"]=hasContent;
        [QWGLOBALMANAGER statisticsEventId:@"x_wd_yhq" withLable:@"优惠券" withParams:tdParams];
    } failure:^(HttpException *e) {
        
        [self.mainTableView footerEndRefreshing];
        [self.mainTableView headerEndRefreshing];
    }];
}

#pragma mark - 已过期数据HTTPRequest
- (void)loadDatedQuan:(myCouponQuanModelR *)modelR{
    
    [Coupon myCouponQuanDated:modelR success:^(id obj) {
        
        MyOverdueCouponVoListModel *couponList = (MyOverdueCouponVoListModel *)obj;
        
        if(currentPage == 1 && couponList.coupons.count == 0){
            [self showInfoView:@"暂无已过期优惠" image:@"ic_img_fail"];
        }
        
        if(couponList.coupons == nil){
            currentPage -= 1;
            [self.mainTableView.footer setCanLoadMore:NO];
        }else{
  
            if(currentPage == 1){
                
                self.dataArray = [NSMutableArray arrayWithArray:couponList.coupons];
                [self.mainTableView reloadData];
            }else{
                
                [self.dataArray addObjectsFromArray:couponList.coupons];
                [self.mainTableView reloadData];
            }
            if(currentPage == 1){
                
                [MyCouponVoModel deleteWithWhere:@"status=4"];
                
                [MyCouponVoModel insertToDBWithArray:couponList.coupons filter:^(id model, BOOL inseted, BOOL *rollback) {
                    
                }];
            }
        }
    
        [self.mainTableView footerEndRefreshing];
        [self.mainTableView headerEndRefreshing];
        NSString *hasContent;
        if(_dataArray > 0){
            hasContent = @"有内容";
        }else {
            hasContent = @"无内容";
        }
        NSMutableDictionary *tdParams = [NSMutableDictionary dictionary];
        tdParams[@"有无内容"]=hasContent;
        [QWGLOBALMANAGER statisticsEventId:@"x_wd_yhq" withLable:@"优惠券" withParams:tdParams];
    } failure:^(HttpException *e) {
        
        [self.mainTableView footerEndRefreshing];
        [self.mainTableView headerEndRefreshing];
    }];
}

#pragma mark - TableViewDelegate
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    return [VFourCouponQuanTableViewCell getCellHeight:nil];
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    
    if(self.dataArray == nil || self.dataArray.count == 0){
        return 0;
    }else{
        return self.dataArray.count;
    }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    VFourCouponQuanTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:Identifier];
 
    MyCouponVoModel *model = self.dataArray[indexPath.row];
    
    [cell setMyCouponQuan:model];

    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    if(QWGLOBALMANAGER.currentNetWork == kNotReachable){
        [SVProgressHUD showErrorWithStatus:kWarning12];
        return;
    }

    MyCouponVoModel *model = self.dataArray[indexPath.row];
    if(model == nil){
        return;
    }
    
    if([model.frozen intValue] == 1 && [model.status intValue] != 3){
        [SVProgressHUD showErrorWithStatus:kWarning48];
        
        if(self.type != Enum_CouponQuan_HasOverdDate){
            
            [self.dataArray removeObject:model];
            [self.mainTableView reloadData];
            //注意调删除接口//
            [self removeQuan:model.myCouponId];
            return;
        }
        
    }

//    MyNewCouponQuanDetailViewController *VC = [[MyNewCouponQuanDetailViewController alloc]init];
//    VC.couponId = model.couponId;
//    VC.myCouponId = model.myCouponId;
//    VC.fromMicroMall = model.fromMicroMall;
//    VC.open=model.open;//是否公开
//    [self.navigationController pushViewController:VC animated:YES];
    
    
        MyCouponDetailViewController *VC = [[MyCouponDetailViewController alloc]init];
        VC.couponId = model.couponId;
        VC.myCouponId = model.myCouponId;
        VC.fromMicroMall = model.fromMicroMall;
        VC.open=model.open;//是否公开
        [self.navigationController pushViewController:VC animated:YES];
    
}


#pragma mark - 删除被冻结数据
- (void)removeQuan:(NSString *)couponId{
    
    removeQuanModelR *modelR = [removeQuanModelR new];
    modelR.token = QWGLOBALMANAGER.configure.userToken;
    modelR.myCouponId = couponId;

    [Coupon removeQuan:modelR success:^(id obj) {
        
        DDLogVerbose(@"移除成功");
        
    } failure:^(HttpException *e) {
        
        DDLogVerbose(@"移除失败");
        
    }];
}


@end
