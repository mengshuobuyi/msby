//
//  NewSellUserCenterViewController.m
//  APP
//  新我的页面
//  NW_queryMemberDetail 用户资料
//  GetServiceTelLists 客服电话
//  GetInviteInfo 获取邀请好友资料
//  Created by qw_imac on 16/4/18.
//  Copyright © 2016年 carret. All rights reserved.
//

#import "NewSellUserCenterViewController.h"
#import "LoginViewController.h"
#import "MessageBoxListViewController.h"
#import "NewPersonInformationViewController.h"
#import "DetialLevelViewController.h"
#import "MyCreditViewController.h"
#import "LevelUpAlertView.h"
#import "QWProgressHUD.h"
#import "UserCenterViewCell.h"
#import "QZNewSettingViewController.h"
#import "Mbr.h"
#import "WinDetialViewController.h"
#import "MyCouponQuanViewController.h"
#import "MyCouponDrugViewController.h"
#import "SearchAndChooseAddressViewController.h"
#import "SVProgressHUD.h"
#import "QZStoreCollectViewController.h"
#import "MyIndentViewController.h"
#import "ReceiverAddressTableViewController.h"
#import "IndentDetailListViewController.h"
#import "WebDirectViewController.h"
#define CENTERHEADER @"img_my_pepole"
#import "MKNumberBadgeView.h"
#import "FeedbackViewController.h"
#import "CircleMsgRootViewController.h"
#import "NewUserCenterViewController.h"
@interface NewSellUserCenterViewController ()<UITableViewDataSource,UITableViewDelegate,UIActionSheetDelegate>
{
    NSMutableArray      *telNumbers;           //客服电话
    NSArray             *titleArr;            //tableview的列表项
    NSArray             *imageArr;            //tableview的列表项前置的小图片
    UserInfoTagModel    *UserTag;
    NSString            *score;               //积分
    NSString            *level;               //等级
}
@property (weak, nonatomic) IBOutlet UIView         *loginAfterView;
@property (weak, nonatomic) IBOutlet UIView         *loginBeforeView;
@property (weak, nonatomic) IBOutlet UILabel        *nickLabel;
@property (weak, nonatomic) IBOutlet UILabel        *levelLabel;
@property (weak, nonatomic) IBOutlet UIButton       *signBtn;
@property (weak, nonatomic) IBOutlet UIImageView    *nickImg;
@property (weak, nonatomic) IBOutlet UILabel        *undownLabel;
@property (weak, nonatomic) IBOutlet UILabel        *unEvLabel;
@property (strong, nonatomic) IBOutlet UIView       *headView;
@property (strong, nonatomic) UIImageView           *redPoint;
@property (nonatomic, strong) InviterInfoModel      *modelInviterInfo;
@property (nonatomic,assign) BOOL                   isSign;
@property (nonatomic,strong) mbrMemberInfo          *info;
@property (nonatomic,strong) LevelUpAlertView       *alertView;
@property (nonatomic, strong) MKNumberBadgeView     *badgeView;
@property (assign, nonatomic) BOOL                  tabBarItemSelected;
@end

@implementation NewSellUserCenterViewController

-(void)UIGlobal {
    [super UIGlobal];
    self.nickImg.layer.cornerRadius = 32.0;
    self.nickImg.clipsToBounds = YES;
    self.undownLabel.layer.cornerRadius = 8;
    self.undownLabel.layer.borderWidth = 0.5;
    self.undownLabel.layer.borderColor = RGBHex(qwColor3).CGColor;
    self.undownLabel.layer.masksToBounds = YES;
    self.unEvLabel.layer.cornerRadius = 8;
    self.unEvLabel.layer.borderWidth = 0.5;
    self.unEvLabel.layer.masksToBounds = YES;
    self.unEvLabel.layer.borderColor = RGBHex(qwColor3).CGColor;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    telNumbers = [@[] mutableCopy];
    [self setNaviItem];
    [self getServiceTel];
    if (iOSv7 && self.view.frame.origin.y==0) {
        self.edgesForExtendedLayout = UIRectEdgeNone;
        self.extendedLayoutIncludesOpaqueBars = NO;
        self.modalPresentationCapturesStatusBarAppearance = NO;
    }
    titleArr = @[@[@"收货地址",@"优惠券",@"优惠商品",@"中奖纪录"],@[@"我的积分",@"积分商城"],@[@"我关注的药房"],@[@"联系客服",@"意见反馈",@"邀请好友使用问药"]];
    imageArr = @[@[@"mydail_ic_adress",@"mydail_ic_coupon",@"mydail_ic_Preferentialgoods",@"mydail_ic_winning"],@[@"mydail_ic_mypoints",@"mydail_ic_pointshop"],@[@"mydail_ic_attention"],@[@"mydail_ic_phone",@"mydail_ic_opinion",@"mydail_ic_invitation"]];
    UITapGestureRecognizer *tap1 = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(loginClick)];
    [self.loginBeforeView addGestureRecognizer:tap1];
    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(personHeadImageClick)];
    [self.loginAfterView addGestureRecognizer:tap];
    [self setUpTableView];
}

- (void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
    //立刻刷新小红点
    [QWGLOBALMANAGER updateRedPoint];
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self.navigationController setNavigationBarHidden:NO animated:YES];
    [self requestPersonInfomation];
    NSString *str = [[NSUserDefaults standardUserDefaults] objectForKey:@"BeRead"];
    if ([str isEqualToString:@"1"]) {
        QWGLOBALMANAGER.myCenterBudge.hidden = YES;
    }else{
        QWGLOBALMANAGER.myCenterBudge.hidden = NO;
    }
    if(self.badgeView.value > 0) {
        self.badgeView.hidden = NO;
    }else{
        self.badgeView.hidden = YES;
    }
    [self.tableMain reloadData];
  
    
}
//vip等级
-(void)judgeLevelAndIntergral {
    self.levelLabel.text = [NSString stringWithFormat:@"V%@会员 ",level?level:@"0"];
}

- (IBAction)sign:(UIButton *)sender {
//    if (self.isSign) {
//        [QWProgressHUD showSuccessWithStatus:@"今日已签到!" hintString:nil duration:2.0];
//    }else {
        [self signIn];
//    }
}
//我的等级
- (IBAction)enterMyLevel:(UIButton *)sender {
    if (!QWGLOBALMANAGER.loginStatus) {
        LoginViewController *loginViewController = [[LoginViewController alloc] initWithNibName:@"LoginViewController" bundle:nil];
        UINavigationController *navgationController = [[QWBaseNavigationController alloc] initWithRootViewController:loginViewController];
        loginViewController.isPresentType = YES;
        [self presentViewController:navgationController animated:YES completion:NULL];
        __weak typeof(self) weakSelf = self;
        loginViewController.loginSuccessBlock = ^(){
                [weakSelf enterMyLevel];
        };
    }else {
        [self enterMyLevel];
    }
}

-(void)enterMyLevel {
    NSMutableDictionary *tdParams = [NSMutableDictionary dictionary];
    tdParams[@"页面类型"]=@"营销";
    [QWGLOBALMANAGER statisticsEventId:@"x_wd_dj" withLable:@"我的" withParams:tdParams];
    //等级页面
    DetialLevelViewController *viewController = [DetialLevelViewController new];
    viewController.isComeFromIntegralVC = NO;
    viewController.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:viewController animated:YES];
}

-(void)signIn {
    SignR *modelR = [SignR new];
    if (QWGLOBALMANAGER.currentNetWork == kNotReachable) {
        [self showInfoInView:self.tableMain offsetSize:0 text:@"网络未连通，请重试" image:@"网络信号icon"];
    }else {
        if (QWGLOBALMANAGER.configure.userToken) {
            modelR.token = QWGLOBALMANAGER.configure.userToken;
        }
        [Credit sign:modelR success:^(SignModel *responModel) {
            if ([responModel.apiStatus integerValue] == 0) {
                [QWProgressHUD showSuccessWithStatus:@"签到成功!" hintString:[NSString stringWithFormat:@"+%@",responModel.rewardScore] duration:2.0];
                [self requestPersonInfomation];
                NSMutableDictionary *tdParams = [NSMutableDictionary dictionary];
                tdParams[@"页面类型"]=@"营销";
                tdParams[@"积分"] = [NSString stringWithFormat:@"%@",score];
                [QWGLOBALMANAGER statisticsEventId:@"x_wd_qd" withLable:@"我的" withParams:tdParams];
            }else {
                [QWProgressHUD showSuccessWithStatus:responModel.apiMessage hintString:nil duration:2.0];
            }
        } failure:^(HttpException *e) {
            [QWProgressHUD showSuccessWithStatus:@"签到失败!" hintString:nil duration:2.0];
        }];
    }
}

-(void)setUpTableView {
    self.tableMain =[[UITableView alloc] initWithFrame:CGRectMake(0, 0 , APP_W, [[UIScreen mainScreen] bounds].size.height -44-64-6) style:UITableViewStylePlain];
    self.tableMain.delegate = self;
    self.tableMain.dataSource = self;
    self.tableMain.scrollEnabled = YES;
    self.tableMain.backgroundColor = RGBHex(qwColor11);
    self.tableMain.separatorInset = UIEdgeInsetsZero;
    self.tableMain.separatorColor = RGBHex(qwColor10);
    [self.view addSubview:self.tableMain];
    self.headView.frame = CGRectMake(0, 0, APP_W, 180);
    self.tableMain.tableHeaderView = self.headView;
}

- (void)setNaviItem
{
    UIBarButtonItem *fixed = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace target:nil action:nil];
    fixed.width = -15;
    
    UIView *bg = [[UIView alloc] initWithFrame:CGRectMake(0, 0, 70, 44)];
    bg.backgroundColor = [UIColor clearColor];
    
    UIButton *btn = [UIButton buttonWithType:UIButtonTypeCustom];
    btn.frame = CGRectMake(18, -1, 60, 44);
    [btn setImage:[UIImage imageNamed:@"icon_news"] forState:UIControlStateNormal];
    [btn setImage:[UIImage imageNamed:@"icon_news_click"] forState:UIControlStateHighlighted];
    [btn addTarget:self action:@selector(pushIntoMessageBox:) forControlEvents:UIControlEventTouchUpInside];
    [bg addSubview:btn];
    
    self.redPoint = [[UIImageView alloc] initWithFrame:CGRectMake(56, 8, 10, 10)];
    self.redPoint.image = [UIImage imageNamed:@"icon_red_withWithBorder"];
    self.redPoint.hidden = YES;
    [bg addSubview:self.redPoint];
    
    UIBarButtonItem *item = [[UIBarButtonItem alloc] initWithCustomView:bg];
    self.navigationItem.rightBarButtonItems = @[fixed,item];
    
    UIButton *leftBtn = [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 40, 40)];
    [leftBtn setTitleColor:RGBHex(qwColor4) forState:UIControlStateNormal];
    [leftBtn setTitle:@"设置" forState:UIControlStateNormal];
    [leftBtn addTarget:self action:@selector(newSetting) forControlEvents:UIControlEventTouchUpInside];
    UIBarButtonItem *naviBtn = [[UIBarButtonItem alloc]initWithCustomView:leftBtn];
    self.navigationItem.leftBarButtonItem = naviBtn;
}

- (void)pushIntoMessageBox:(id)sender
{
    if(!QWGLOBALMANAGER.loginStatus) {
        LoginViewController *loginViewController = [[LoginViewController alloc] initWithNibName:@"LoginViewController" bundle:nil];
        UINavigationController *navgationController = [[QWBaseNavigationController alloc] initWithRootViewController:loginViewController];
        loginViewController.isPresentType = YES;
        [self presentViewController:navgationController animated:YES completion:NULL];
        __weak typeof(self) weakSelf = self;
        loginViewController.loginSuccessBlock = ^(){
            [weakSelf enterMessageBox];
        };
        return;
    }else {
        [self enterMessageBox];
    }
}
-(void)enterMessageBox {
    NSMutableDictionary *tdParams = [NSMutableDictionary dictionary];
    tdParams[@"页面类型"]=@"营销";
    tdParams[@"事件"]=@"消息";
    [QWGLOBALMANAGER statisticsEventId:@"x_wd_xx" withLable:@"消息" withParams:tdParams];
    MessageBoxListViewController *vcMsgBoxList = [[UIStoryboard storyboardWithName:@"MessageBoxListViewController" bundle:[NSBundle mainBundle]] instantiateViewControllerWithIdentifier:@"MessageBoxListViewController"];
    vcMsgBoxList.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:vcMsgBoxList animated:YES];
}

//升级
-(void)levelUpWith:(NSString *)currentLevel {
    LevelUpModel *model = [[LevelUpModel alloc]init];
    model.level = [currentLevel integerValue];
    model.integral = [QWGLOBALMANAGER rewardScoreWithTaskKey:[NSString stringWithFormat:@"VIP%d",model.level]];
    self.alertView = [LevelUpAlertView levelUpAlertViewWith:model];
    self.alertView.frame =  CGRectMake(0, 0, [UIScreen mainScreen].bounds.size.width, [UIScreen mainScreen].bounds.size.height);
    self.alertView.bkView.alpha = 0.0;
    UIWindow *win = [[UIApplication sharedApplication] keyWindow];
    [win addSubview:self.alertView];
    [UIView animateWithDuration:0.25 animations:^{
        self.alertView.bkView.alpha =0.4;
        self.alertView.alertView.hidden = NO;
    }];
}

#pragma mark -----
#pragma mark ----- 登录Action
//用户体验--主动登录用navi push 被动登录用present
- (void)loginButtonClick {
    LoginViewController *loginViewController = [[LoginViewController alloc] initWithNibName:@"LoginViewController" bundle:nil];
    UINavigationController *navgationController = [[QWBaseNavigationController alloc] initWithRootViewController:loginViewController];
    loginViewController.isPresentType = YES;
    [self presentViewController:navgationController animated:YES completion:NULL];
}

-(void)loginClick {
    LoginViewController *loginViewController = [[LoginViewController alloc] initWithNibName:@"LoginViewController" bundle:nil];
    loginViewController.hidesBottomBarWhenPushed = YES;
    loginViewController.needVerifyFullInfo = YES;
    [self.navigationController pushViewController:loginViewController animated:YES];
}

- (void)personHeadImageClick {
    NewPersonInformationViewController *personInfoViewController = [[NewPersonInformationViewController alloc]  init];
    personInfoViewController.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:personInfoViewController animated:YES];
}

- (IBAction)enterMyIndent:(UIButton *)sender {
    if(QWGLOBALMANAGER.loginStatus){
        [self enterIndentWith:sender.tag];
    }else{
        LoginViewController *loginViewController = [[LoginViewController alloc] initWithNibName:@"LoginViewController" bundle:nil];
        UINavigationController *navgationController = [[QWBaseNavigationController alloc] initWithRootViewController:loginViewController];
        loginViewController.isPresentType = YES;
        [self presentViewController:navgationController animated:YES completion:NULL];
        __weak typeof(self) weakSelf = self;
        loginViewController.loginSuccessBlock = ^(){
            [weakSelf enterIndentWith:sender.tag];
        };
    }

}

-(void)enterIndentWith:(NSInteger)tag {
    NSMutableDictionary *tdParams = [NSMutableDictionary dictionary];
    tdParams[@"等级"]=level;
    NSString *event;
    switch (tag) {
        case 1:
            event = @"x_sywddd_ckqb";
            break;
        case 2:
            event = @"x_sywddd_wwc";
            break;
        case 3:
            event = @"x_sywddd_dpj";
            break;
    }
    [QWGLOBALMANAGER statisticsEventId:event withLable:@"我的" withParams:tdParams];
    MyIndentViewController *myIndent = [MyIndentViewController new];
    myIndent.hidesBottomBarWhenPushed = YES;
    myIndent.index = tag;
    [self.navigationController pushViewController:myIndent animated:YES];
}

-(void)newSetting {
    NewUserCenterViewController *vc = [[NewUserCenterViewController alloc]initWithNibName:@"NewUserCenterViewController" bundle:nil];
    
    
//    NSMutableDictionary *tdParams = [NSMutableDictionary dictionary];
//    tdParams[@"页面类型"]=@"营销";
//    [QWGLOBALMANAGER statisticsEventId:@"x_wd_sz" withLable:@"我的" withParams:tdParams];
//    QZNewSettingViewController* setting = [[UIStoryboard storyboardWithName:@"QZSetting" bundle:nil] instantiateViewControllerWithIdentifier:@"QZNewSettingViewController"];
    vc.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:vc animated:YES];
}

#pragma mark -----
#pragma mark ----- 列表代理
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return titleArr.count;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return [(NSArray *)titleArr[section] count];
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    UIView *bgView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, APP_W, 7.0)];
    bgView.backgroundColor = [UIColor clearColor];
    
    return bgView;
}

- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section
{
    UIView *bgView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, APP_W, 0.1)];
    bgView.backgroundColor = [UIColor clearColor];
    return bgView;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section
{
    return 0.1;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return [UserCenterViewCell getCellHeight:nil];
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 7.0;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *cellIdentifier = @"cellIdentifier";
    UserCenterViewCell *cell = (UserCenterViewCell *)[tableView dequeueReusableHeaderFooterViewWithIdentifier:cellIdentifier];
    if (cell == nil) {
        cell = [[NSBundle mainBundle] loadNibNamed:@"UserCenterViewCell" owner:self options:nil][0];
    }
    cell.scoreLabel.hidden = YES;
    if(indexPath.section == 0){
        if(indexPath.row == 1){
            if([UserTag.couponUnreadCounts intValue] != 0 ){
                cell.label.text = [NSString stringWithFormat:@"%d张券将过期",[UserTag.couponUnreadCounts intValue]];
            }else{
                cell.label.text = @"";
            }
        }
        if(indexPath.row == 2){
            if([UserTag.promotionUnreadCounts intValue] != 0){
                cell.label.text = [NSString stringWithFormat:@"%d个优惠商品将过期",[UserTag.promotionUnreadCounts intValue]];
            }else{
                cell.label.text = @"";
            }
        }
    }else if (indexPath.section == 1){
        if(indexPath.row == 0){
            if (QWGLOBALMANAGER.loginStatus) {
                cell.scoreLabel.hidden = NO;
                cell.scoreLabel.text = [NSString stringWithFormat:@"(%@)",score];
            }else{
                cell.scoreLabel.hidden = YES;
            }
        }
    }
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    cell.titleLabel.text = titleArr[indexPath.section][indexPath.row];
    cell.titleImageView.image = [UIImage imageNamed:imageArr[indexPath.section][indexPath.row]];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    cell.separatorHidden=YES;
    return cell;
}
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    switch (indexPath.section) {
        case 0:
        {
            switch (indexPath.row) {
                case 0:
                {//收货地址
                    if(QWGLOBALMANAGER.loginStatus){
                        [self enterAddressList];
                    }else{
                        LoginViewController *loginViewController = [[LoginViewController alloc] initWithNibName:@"LoginViewController" bundle:nil];
                        UINavigationController *navgationController = [[QWBaseNavigationController alloc] initWithRootViewController:loginViewController];
                        loginViewController.isPresentType = YES;
                        [self presentViewController:navgationController animated:YES completion:NULL];
                        __weak typeof(self) weakSelf = self;
                        loginViewController.loginSuccessBlock = ^(){
                            [weakSelf enterAddressList];
                        };
                    }
                    break;
                }
                case 1://优惠券
                {
                    if(QWGLOBALMANAGER.loginStatus){
                        [self enterMyCoupon];
                    }else{
                        LoginViewController *loginViewController = [[LoginViewController alloc] initWithNibName:@"LoginViewController" bundle:nil];
                        UINavigationController *navgationController = [[QWBaseNavigationController alloc] initWithRootViewController:loginViewController];
                        loginViewController.isPresentType = YES;
                        [self presentViewController:navgationController animated:YES completion:NULL];
                        __weak typeof(self) weakSelf = self;
                        loginViewController.loginSuccessBlock = ^(){
                            [weakSelf enterMyCoupon];
                        };
                    }
                }
                    break;
                case 2://我的优惠商品
                {
                    if(QWGLOBALMANAGER.loginStatus){
                        [self enterMyCouponDrug];
                    }else{
                        LoginViewController *loginViewController = [[LoginViewController alloc] initWithNibName:@"LoginViewController" bundle:nil];
                        UINavigationController *navgationController = [[QWBaseNavigationController alloc] initWithRootViewController:loginViewController];
                        loginViewController.isPresentType = YES;
                        [self presentViewController:navgationController animated:YES completion:NULL];
                        __weak typeof(self) weakSelf = self;
                        loginViewController.loginSuccessBlock = ^(){
                            [weakSelf enterMyCouponDrug];
                        };
                    }
                }
                    break;
                case 3://中奖纪录
                {
                    if(QWGLOBALMANAGER.loginStatus){
                        [self enterWinList];
                    }else{
                        LoginViewController *loginViewController = [[LoginViewController alloc] initWithNibName:@"LoginViewController" bundle:nil];
                        UINavigationController *navgationController = [[QWBaseNavigationController alloc] initWithRootViewController:loginViewController];
                        loginViewController.isPresentType = YES;
                        [self presentViewController:navgationController animated:YES completion:NULL];
                        __weak typeof(self) weakSelf = self;
                        loginViewController.loginSuccessBlock = ^(){
                            [weakSelf enterWinList];
                        };
                    }
                }
                    break;
            }
        }
            break;
        case 1:
            switch (indexPath.row) {
                case 0://我的积分
                {
                    if(QWGLOBALMANAGER.loginStatus){
                        [self enterMyCredit];
                    }else{
                        LoginViewController *loginViewController = [[LoginViewController alloc] initWithNibName:@"LoginViewController" bundle:nil];
                        UINavigationController *navgationController = [[QWBaseNavigationController alloc] initWithRootViewController:loginViewController];
                        loginViewController.isPresentType = YES;
                        [self presentViewController:navgationController animated:YES completion:NULL];
                        __weak typeof(self) weakSelf = self;
                        loginViewController.loginSuccessBlock = ^(){
                            [weakSelf enterMyCredit];
                        };
                    }
                }
                    break;
                case 1://积分商城（不用登陆）
                {
                    //积分商城
                    NSMutableDictionary *tdParams = [NSMutableDictionary dictionary];
                    tdParams[@"等级"]=level;
                    [QWGLOBALMANAGER statisticsEventId:@"x_sywddd_jfsc" withLable:@"我的" withParams:tdParams];
                    WebDirectViewController *vcWebMedicine = [[UIStoryboard storyboardWithName:@"WebDirect" bundle:nil] instantiateViewControllerWithIdentifier:@"WebDirectViewController"];
                    WebDirectLocalModel *modelLocal = [WebDirectLocalModel new];
                    modelLocal.typeLocalWeb = WebPageTypeIntegralIndex;
                    modelLocal.title = @"积分商城";
                    [vcWebMedicine setWVWithLocalModel:modelLocal];
                    [self.navigationController pushViewController:vcWebMedicine animated:YES];
                }
                    break;
            }
            break;
        case 2://我关注的药房
        {
            if(QWGLOBALMANAGER.loginStatus){
            }else{
                LoginViewController *loginViewController = [[LoginViewController alloc] initWithNibName:@"LoginViewController" bundle:nil];
                UINavigationController *navgationController = [[QWBaseNavigationController alloc] initWithRootViewController:loginViewController];
                loginViewController.isPresentType = YES;
                [self presentViewController:navgationController animated:YES completion:NULL];
                __weak typeof(self) weakSelf = self;
                loginViewController.loginSuccessBlock = ^(){
                };
            }
        }
            break;
        case 3:
        {
            switch (indexPath.row) {
                case 0://联系客服
                {
                    if(QWGLOBALMANAGER.loginStatus){
                        [self phoneCall];
                    }else{
                        LoginViewController *loginViewController = [[LoginViewController alloc] initWithNibName:@"LoginViewController" bundle:nil];
                        UINavigationController *navgationController = [[QWBaseNavigationController alloc] initWithRootViewController:loginViewController];
                        loginViewController.isPresentType = YES;
                        [self presentViewController:navgationController animated:YES completion:NULL];
                        __weak typeof(self) weakSelf = self;
                        loginViewController.loginSuccessBlock = ^(){
                            [weakSelf phoneCall];
                        };
                    }
                    
                }
                    break;
                case 1://意见反馈（不用登陆）
                {
                    NSMutableDictionary *tdParams = [NSMutableDictionary dictionary];
                    tdParams[@"等级"]=level;
                    [QWGLOBALMANAGER statisticsEventId:@"x_sywddd_yjfk" withLable:@"我的" withParams:tdParams];
                    FeedbackViewController * feedback = [[FeedbackViewController alloc] initWithNibName:@"FeedbackViewController" bundle:nil];
                    feedback.hidesBottomBarWhenPushed = YES;
                    [self.navigationController pushViewController:feedback animated:YES];
                }
                    break;
                case 2://邀请好友使用问药
                {
                    if(QWGLOBALMANAGER.loginStatus){
                        [self getInviterInfo];
                    }else{
                        LoginViewController *loginViewController = [[LoginViewController alloc] initWithNibName:@"LoginViewController" bundle:nil];
                        UINavigationController *navgationController = [[QWBaseNavigationController alloc] initWithRootViewController:loginViewController];
                        loginViewController.isPresentType = YES;
                        [self presentViewController:navgationController animated:YES completion:NULL];
                        __weak typeof(self) weakSelf = self;
                        loginViewController.loginSuccessBlock = ^(){
                            [weakSelf getInviterInfo];
                        };
                    }
                }
                    break;
            }
        }
    }
}
- (void)enterAddressList {
    NSMutableDictionary *tdParams = [NSMutableDictionary dictionary];
    tdParams[@"等级"]=level;
    [QWGLOBALMANAGER statisticsEventId:@"x_sywddd_shdz" withLable:@"我的订单" withParams:tdParams];
    ReceiverAddressTableViewController *vc = [ReceiverAddressTableViewController new];
    vc.pageType = PageComeFromReceiveAddress;
    vc.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:vc animated:YES];
}

//进入优惠券
-(void)enterMyCoupon {
    MyCouponQuanViewController *myCouponQuan = [[MyCouponQuanViewController alloc]init];
    myCouponQuan.hidesBottomBarWhenPushed = YES;
    myCouponQuan.popToRootView = NO;
    [self.navigationController pushViewController:myCouponQuan animated:YES];
}

//进入优惠商品
-(void)enterMyCouponDrug {
    MyCouponDrugViewController * myCouponDrug = [[MyCouponDrugViewController alloc]init];
    myCouponDrug.hidesBottomBarWhenPushed = YES;
    myCouponDrug.popToRootView = NO;
    [self.navigationController pushViewController:myCouponDrug animated:YES];
}

-(void)enterWinList {
    NSMutableDictionary *tdParams = [NSMutableDictionary dictionary];
    tdParams[@"事件"]=@"中奖纪录";
    [QWGLOBALMANAGER statisticsEventId:@"x_wd_zjjl_dj" withLable:@"我的" withParams:tdParams];
    WinDetialViewController *viewController = [WinDetialViewController new];
    viewController.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:viewController animated:YES];
}

-(void)enterMyCredit {
    //积分页面
    NSMutableDictionary *tdParams = [NSMutableDictionary dictionary];
    tdParams[@"页面类型"]=@"营销";
    [QWGLOBALMANAGER statisticsEventId:@"x_wd_jf" withLable:@"我的" withParams:tdParams];
    MyCreditViewController* creditVC = [[UIStoryboard storyboardWithName:@"Credit" bundle:nil] instantiateViewControllerWithIdentifier:@"MyCreditViewController"];
    creditVC.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:creditVC animated:YES];
}

//拨打客服电话
-(void)phoneCall {
    UIActionSheet *telphone = [[UIActionSheet alloc]initWithTitle:nil delegate:self cancelButtonTitle:@"取消" destructiveButtonTitle:nil otherButtonTitles: nil];
    for (NSInteger index = 0; index < telNumbers.count ; index ++) {
        [telphone addButtonWithTitle:telNumbers[index]];
    }
    [telphone showInView:self.view];
}

-(void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex {
    if (buttonIndex != 0) {
        NSMutableDictionary *tdParams = [NSMutableDictionary dictionary];
        tdParams[@"等级"]=level;
        [QWGLOBALMANAGER statisticsEventId:@"x_sywddd_lxkf" withLable:@"我的" withParams:tdParams];
        [self callNumber:telNumbers[buttonIndex - 1]];
    }
}

-(void)callNumber:(NSString *)tel {
    NSString *number = [NSString stringWithFormat:@"tel://%@",tel];
    [[UIApplication sharedApplication] openURL:[NSURL URLWithString:number]];
}

// 获取邀请好友的信息
- (void)getInviterInfo {
    [Mbr getInviteInfo:[MbrInviterInfoModelR new] success:^(id obj) {
        if (obj != nil) {
            self.modelInviterInfo = (InviterInfoModel *) obj;
            [self inviteFriend];
        }
    } failure:^(HttpException *e) {
        
    }];
}

-(void)inviteFriend {
    NSMutableDictionary *tdParams = [NSMutableDictionary dictionary];
    tdParams[@"页面类型"]=@"营销";
    [QWGLOBALMANAGER statisticsEventId:@"x_wd_yqhy" withLable:@"我的" withParams:tdParams];
    
    ShareContentModel *modelShare = [[ShareContentModel alloc] init];
    modelShare.typeShare = ShareTypeRecommendFriends;
    modelShare.typeCome=@"1";//从我的个人中心进来
    if (self.modelInviterInfo != nil) {
        modelShare.title = self.modelInviterInfo.title;
        modelShare.content = self.modelInviterInfo.desc;
        modelShare.imgURL = self.modelInviterInfo.imgUrl;
    }
    if (!QWGLOBALMANAGER.loginStatus) {
        LoginViewController *loginViewController = [[LoginViewController alloc] initWithNibName:@"LoginViewController" bundle:nil];
        UINavigationController *navgationController = [[QWBaseNavigationController alloc] initWithRootViewController:loginViewController];
        loginViewController.isPresentType = YES;
        [self presentViewController:navgationController animated:YES completion:NULL];
        __weak typeof(self) weakSelf = self;
        loginViewController.loginSuccessBlock = ^(){
            [weakSelf popUpShareView:modelShare];
        };
    }else {
        if (QWGLOBALMANAGER.configure.inviteCode == nil) {
            QWGLOBALMANAGER.configure.inviteCode = @"";
        }
        modelShare.shareLink = [NSString stringWithFormat:@"%@html5/v224/downLoad.html?inviteCode=%@",BASE_URL_V2,QWGLOBALMANAGER.configure.inviteCode];
        [self popUpShareView:modelShare];
    }
    
}
#pragma mark -----
#pragma mark ----- 处理通知
- (void)getNotifType:(Enum_Notification_Type)type data:(id)data target:(id)obj
{
    if (NotifLoginSuccess == type || NotifQuitOut == type) {
        [self requestPersonInfo];
        QWGLOBALMANAGER.needShowBadge = NO;
        [QWGLOBALMANAGER setBadgeNumStatus:NO];
        self.redPoint.hidden = YES;
        QWGLOBALMANAGER.sellerMineRedPoint.hidden = YES;
        UserTag = [UserInfoTagModel new];
        [self.tableMain reloadData];
    } else if(NotiMessageBadgeNum == type) {
        
    } else if(NotifRefreshCurAppPageOne==type){
        
    } else if (NotiWhetherHaveNewMessage == type) {
        NSString *countStr = data;
        //        DDLogVerbose(@"the count Str is %@",countStr);
        if ([countStr intValue] > 0) {
            self.redPoint.hidden = NO;
            QWGLOBALMANAGER.sellerMineRedPoint.hidden = NO;
        } else {
            self.redPoint.hidden = YES;
            QWGLOBALMANAGER.sellerMineRedPoint.hidden = YES;
        }
    }else if(NotifTabsWillTransition == type) {
        [self requestPersonInfomation];
    }
}

#pragma mark -----
#pragma mark ----- 网络请求
//用于进入app之后接收到NotifLoginSuccess 和 NotifQuitOut NotifTabsDidTransition通知时请求的数据
- (void)requestPersonInfo {
    if (QWGLOBALMANAGER.loginStatus) {
        if (QWGLOBALMANAGER.currentNetWork == kNotReachable) {
            if(QWGLOBALMANAGER.configure){
                [self.nickImg setImageWithURL:[NSURL URLWithString:QWGLOBALMANAGER.configure.avatarUrl] placeholderImage:[UIImage imageNamed:CENTERHEADER] options:SDWebImageRetryFailed];
                if (QWGLOBALMANAGER.configure.nickName.length != 0) {
                    self.nickLabel.text = QWGLOBALMANAGER.configure.nickName;
                }else if(QWGLOBALMANAGER.configure.mobile.length != 0) {
                    self.nickLabel.text = QWGLOBALMANAGER.configure.mobile;
                }else {
                    if (QWGLOBALMANAGER.configure.userName.length != 0) {
                        self.nickLabel.text = QWGLOBALMANAGER.configure.userName;
                    }
                }
            }
        }else {
            NSMutableDictionary *param = [NSMutableDictionary dictionary];
            param[@"token"] = QWGLOBALMANAGER.configure.userToken;
            HttpClientMgr.progressEnabled = NO;
            [Mbr queryMemberDetailWithParams:param success:^(id obj){
                mbrMemberInfo *info = obj;
                self.info = info;
                if (info) {
                    if (!StrIsEmpty(info.headImageUrl)) {
                        QWGLOBALMANAGER.configure.avatarUrl = info.headImageUrl;
                    }
                    self.loginBeforeView.hidden = YES;
                    //显示头像
                    if ([[[UIDevice currentDevice] systemVersion] floatValue] < 8.0) {
                        [self performSelector:@selector(showHeaderImage:) withObject:info afterDelay:1];
                    }else{
                        [self.nickImg setImageWithURL:[NSURL URLWithString:info.headImageUrl] placeholderImage:[UIImage imageNamed:CENTERHEADER]];
                    }
                    level = info.level;
                    score = info.score;
                    //是否签到
                    self.isSign = info.sign;
                    //判断签到btn背景图片
                    if (info.sign) {
                        UIImage *image = [UIImage imageNamed:@"home_icon_pressde"];
                        [self.signBtn setBackgroundImage:image forState:UIControlStateNormal];
                    }else {
                        [self.signBtn setBackgroundImage:[UIImage imageNamed:@"home_icon"] forState:UIControlStateNormal];
                    }
                    //存储数据
                    [mbrMemberInfo saveObjToDB:info];
                    //显示用户名
                    if (info.nickName.length != 0) {
                        self.nickLabel.text = info.nickName;
                    }else if (info.mobile.length != 0) {
                        self.nickLabel.text = info.mobile;
                    }else if(QWGLOBALMANAGER.configure.userName.length != 0){
                        self.nickLabel.text = QWGLOBALMANAGER.configure.userName;
                    }
                    [self.tableMain reloadData];
                }else {
                    if ([(NSString *)info.apiStatus isEqualToString:@"1"]) {
                        UIAlertView * alertView = [[UIAlertView alloc] initWithTitle:@"提示" message:ALERT_MESSAGE delegate:  self cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
                        alertView.tag = 999;
                        alertView.delegate = self;
                        [alertView show];
                        return;
                    }else{
                        [SVProgressHUD showErrorWithStatus:info.apiMessage duration:DURATION_SHORT];
                    }
                }
            }
                                     failure:^(HttpException *e){
                                         
                                     }];
        }
    }else {
        self.loginBeforeView.hidden = NO;
        [self.tableMain reloadData];
    }
    [self judgeLevelAndIntergral];
}


- (void)requestPersonInfomation {
    if (QWGLOBALMANAGER.loginStatus) {
        if (QWGLOBALMANAGER.currentNetWork == kNotReachable) {
            if(QWGLOBALMANAGER.configure){
                [self.nickImg setImageWithURL:[NSURL URLWithString:QWGLOBALMANAGER.configure.avatarUrl] placeholderImage:[UIImage imageNamed:CENTERHEADER] options:SDWebImageRetryFailed];
                if (QWGLOBALMANAGER.configure.nickName.length != 0) {
                    self.nickLabel.text = QWGLOBALMANAGER.configure.nickName;
                }else if(QWGLOBALMANAGER.configure.mobile.length != 0) {
                    self.nickLabel.text = QWGLOBALMANAGER.configure.mobile;
                }else {
                    if (QWGLOBALMANAGER.configure.userName.length != 0) {
                        self.nickLabel.text = QWGLOBALMANAGER.configure.userName;
                    }
                }
            }
        }else {
            NSMutableDictionary *param = [NSMutableDictionary dictionary];
            param[@"token"] = QWGLOBALMANAGER.configure.userToken;
            HttpClientMgr.progressEnabled = NO;
            [Mbr queryMemberDetailWithParams:param success:^(id obj){
                mbrMemberInfo *info = obj;
                if (info.upgrade) {
                    [self levelUpWith:info.level];
                }
                self.info = info;
                if (info) {
                    if (!StrIsEmpty(info.headImageUrl)) {
                        QWGLOBALMANAGER.configure.avatarUrl = info.headImageUrl;
                    }
                    self.loginBeforeView.hidden = YES;
                    //显示头像
                    if ([[[UIDevice currentDevice] systemVersion] floatValue] < 8.0) {
                        [self performSelector:@selector(showHeaderImage:) withObject:info afterDelay:1];
                    }else{
                        [self.nickImg setImageWithURL:[NSURL URLWithString:info.headImageUrl] placeholderImage:[UIImage imageNamed:CENTERHEADER]];
                    }
                    level = info.level;
                    score = info.score;
                    [self judgeLevelAndIntergral];
                    //是否签到
                    self.isSign = info.sign;
                    //判断签到btn背景图片
                    if (info.sign) {
                        UIImage *image = [UIImage imageNamed:@"home_icon_pressde"];
                        [self.signBtn setBackgroundImage:image forState:UIControlStateNormal];
                    }else {
                        [self.signBtn setBackgroundImage:[UIImage imageNamed:@"home_icon"] forState:UIControlStateNormal];
                    }
                    //未完成订单和待评价订单角标显示
                    if(info.unCompleteOrdCounts > 0){
                        self.undownLabel.hidden = NO;
                        self.undownLabel.text = [NSString stringWithFormat:@"%i",info.unCompleteOrdCounts];
                    }else {
                        self.undownLabel.hidden = YES;
                    }
                    if(info.unEvaluateOrdCounts > 0){
                        self.unEvLabel.hidden = NO;
                        self.unEvLabel.text = [NSString stringWithFormat:@"%i",info.unEvaluateOrdCounts];
                    }else {
                        self.unEvLabel.hidden = YES;
                    }
                 
                    //存储数据
                    [mbrMemberInfo saveObjToDB:info];
                    //显示用户名
                    if (info.nickName.length != 0) {
                        self.nickLabel.text = info.nickName;
                    }else if (info.mobile.length != 0) {
                        self.nickLabel.text = info.mobile;
                    }else if(QWGLOBALMANAGER.configure.userName.length != 0){
                        self.nickLabel.text = QWGLOBALMANAGER.configure.userName;
                    }
                    [self.tableMain reloadData];
                    
                    //我关注的药方
                    if(QWGLOBALMANAGER.loginStatus){
                        [self requestUserCollectTag];
                    }
                }else {
                    if ([(NSString *)info.apiStatus isEqualToString:@"1"]) {
                        UIAlertView * alertView = [[UIAlertView alloc] initWithTitle:@"提示" message:ALERT_MESSAGE delegate:  self cancelButtonTitle:@"确定" otherButtonTitles:nil, nil];
                        alertView.tag = 999;
                        alertView.delegate = self;
                        [alertView show];
                        return;
                    }else{
                        [SVProgressHUD showErrorWithStatus:info.apiMessage duration:DURATION_SHORT];
                    }
                }
            }
                                     failure:^(HttpException *e){
                                         
                                     }];
        }
    }else {
        self.loginBeforeView.hidden = NO;
        self.undownLabel.hidden = YES;
        self.unEvLabel.hidden = YES;
        [self.tableMain reloadData];
    }
}

- (void)requestUserCollectTag {
    HttpClientMgr.progressEnabled = NO;
    MbrInviterCheckR *modelR = [[MbrInviterCheckR alloc] init];
    modelR.token = QWGLOBALMANAGER.configure.userToken;
    [Mbr UserCollectTags:modelR success:^(id obj) {
        UserTag = obj;
        [self.tableMain reloadData];
    } failure:^(HttpException *e) {
        
    }];
}

- (void)showHeaderImage:(mbrMemberInfo *)info {
    [self.nickImg setImageWithURL:[NSURL URLWithString:info.headImageUrl] placeholderImage:[UIImage imageNamed:CENTERHEADER]];
    [self.tableMain reloadData];
}

-(void)getServiceTel {
    [Mbr queryServiceTelSuccess:^(ServiceTelModel *obj) {
        if ([obj.apiStatus integerValue] == 0) {
            [telNumbers removeAllObjects];
            [telNumbers addObjectsFromArray:obj.list];
            [self.tableMain reloadData];
        }
    } failure:^(HttpException *e) {
        
    }];
}
@end
