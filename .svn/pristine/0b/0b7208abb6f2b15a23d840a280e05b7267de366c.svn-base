//
//  PharmacyMainViewController.m
//  APP
//  微商药房详情-首页Tab
//  使用接口如下:
//  h5/branch/index 首页优惠商品、套餐、换购、分类等数据
//  h5/coupon/byBranch4New 优惠券列表接口
//  Created by 李坚 on 16/5/5.
//  Copyright © 2016年 carret. All rights reserved.
//

#import "PharmacyMainViewController.h"
#import "BrachPromotionListViewController.h"
#import "ConsultStore.h"
#import "LoginViewController.h"
#import "ChatChooserViewController.h"
#import "ChatViewController.h"
#import "SVProgressHUD.h"
#import "BranchPromotionTableViewCell.h"
#import "PackageScrollView.h"
#import "VFourCouponQuanTableViewCell.h"
#import "Coupon.h"
#import "CenterCouponDetailViewController.h"
#import "MedicineDetailViewController.h"
#import "WebDirectViewController.h"

static NSString *const PromotionCellIdentifier = @"BranchPromotionTableViewCell";
static NSString *const CellIdentifier = @"UITableViewCell";
static NSString *const CouponCellIdentifier = @"VFourCouponQuanTableViewCell";

@interface PharmacyMainViewController ()<UITableViewDataSource,UITableViewDelegate,XLCycleScrollViewDatasource,XLCycleScrollViewDelegate,PackageScrollViewDelegate>{
    
    BranchDetailVO *branchDetail;
    PackageScrollView *pkScrollView;
    
    MicroMallBranchIndexVo *branchIndexData;
}

@property (weak, nonatomic) IBOutlet UITableView *mainTableView;
@property (weak, nonatomic) IBOutlet UIView *buttomView;

@end

@implementation PharmacyMainViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    _buttomView.hidden = YES;
    _promotionArray = [NSMutableArray array];
    _otherProuctArray = [NSMutableArray array];
    
    _mainTableView.showsVerticalScrollIndicator = NO;
    _mainTableView.tableFooterView = [[UIView alloc]init];
    _mainTableView.backgroundColor = RGBHex(qwColor11);
    [_mainTableView registerNib:[UINib nibWithNibName:PromotionCellIdentifier bundle:nil] forCellReuseIdentifier:PromotionCellIdentifier];
    [_mainTableView registerClass:[UITableViewCell class] forCellReuseIdentifier:CellIdentifier];
    [_mainTableView registerNib:[UINib nibWithNibName:CouponCellIdentifier bundle:nil] forCellReuseIdentifier:CouponCellIdentifier];

    _mainTableView.separatorStyle = UITableViewCellSeparatorStyleNone;

    NSArray* nibView =  [[NSBundle mainBundle] loadNibNamed:@"PackageScrollView" owner:self options:nil];
    pkScrollView = [nibView objectAtIndex:0];
    pkScrollView.delegate = self;
    pkScrollView.clipsToBounds = YES;
    pkScrollView.frame = CGRectMake(0, 0, 320, (APP_W - 62)/2 + 214);

    [self loadBranchIndex];
    [self loadCouponQuan];
    
    [self performSelector:@selector(showButtomView) withObject:nil afterDelay:1.0f];
}

- (void)showButtomView{
    
    _buttomView.hidden = NO;
}

#pragma mark - 首页数据HTTP请求
- (void)loadBranchIndex{
    
    CategoryModelR *modelR = [CategoryModelR new];
    modelR.branchId = self.branchId;
    
    [ConsultStore MallBranchIndex:modelR success:^(MicroMallBranchIndexVo *obj) {
        
        if([obj.apiStatus intValue] == 0){
            branchIndexData = obj;
            _buttomView.hidden = NO;
            if(obj.banners.count > 0){
                
                if(_cycleScrollView == nil){
                    _cycleScrollView = [[XLCycleScrollView alloc]initWithFrame:CGRectMake(0, 0, APP_W - 14.0f, 85.0f)];
                    _bannerArray = [NSMutableArray arrayWithArray:obj.banners];
                    _cycleScrollView.datasource = self;
                    _cycleScrollView.delegate = self;
                    _mainTableView.tableHeaderView = _cycleScrollView;
                    [_cycleScrollView reloadData];
                    if(obj.banners.count > 1){
                        [_cycleScrollView startAutoScroll:5.0f];
                    }
                }
            }
            if(obj.combos.count > 0){
//                pkScrollView.combosArray = [NSMutableArray arrayWithArray:obj.combos];
                [pkScrollView reloadData];
            }
            if(obj.categorys.count > 0){
                [_otherProuctArray removeAllObjects];
                for(CategoryVo *VO in obj.categorys){
                    if([VO.categoryId isEqualToString:@"39d14193ea1448758bfcadd055e42d7b"]){
                        _promotionArray = [NSMutableArray arrayWithArray:VO.products];
                    }else{
                        [_otherProuctArray addObject:VO];
                    }
                }
            }
            
            [_mainTableView reloadData];
        }
        
    } failure:^(HttpException *e) {
        _buttomView.hidden = NO;
    }];
}


#pragma mark - 优惠券列表HTTP请求
- (void)loadCouponQuan{
    
    pharmacyCouponModelR *modelR = [pharmacyCouponModelR new];
    modelR.branchId = self.branchId;
    modelR.currPage = @1;
    modelR.pageSize = @999;
    if(QWGLOBALMANAGER.loginStatus){
        modelR.token = QWGLOBALMANAGER.configure.userToken;
    }
    
    HttpClientMgr.progressEnabled = NO;
    
    [Coupon mallBranchCouponQuan:modelR success:^(OnlineCouponVoListModel *couponList) {
        
        if(couponList && couponList.coupons.count > 0){
            self.couponQuanList = [NSMutableArray arrayWithArray:couponList.coupons];
            [_mainTableView reloadData];
        }
    } failure:^(HttpException *e) {
        
    }];
}

#pragma mark - PackageScrollViewDelegate
- (void)didSelectedPackageView:(PackageScrollView *)packageView withBranchProId:(NSString *)branchProId{
    
    [self pushMedicineDetailWithId:branchProId];
}

#pragma mark - XLCycleScrollViewDelegate
- (void)didClickPage:(XLCycleScrollView *)csView atIndex:(NSInteger)index{
    
    BranchBannerVo *VO = _bannerArray[index];
    
    if([VO.type intValue] == 1){
        WebDirectViewController *vcWebDirect = [[UIStoryboard storyboardWithName:@"WebDirect" bundle:nil] instantiateViewControllerWithIdentifier:@"WebDirectViewController"];
        vcWebDirect.hidesBottomBarWhenPushed = YES;
        WebDirectLocalModel* webModel = [WebDirectLocalModel new];
        webModel.title = @"活动详情";
        webModel.typeLocalWeb = WebLocalTypeOuterLink;
        webModel.typeTitle = WebTitleTypeOnlyShare;
        vcWebDirect.isOtherLinks = YES;
        webModel.url = [NSString stringWithFormat:@"%@QWSH/web/poster/html/detail.html?id=%@&branchId=%@", H5_BASE_URL,VO.objId,self.branchId];
        [vcWebDirect setWVWithLocalModel:webModel];
        [self.navigation pushViewController:vcWebDirect animated:YES];
    }
    
}

#pragma mark - XLCycleScrollViewDataSource
- (NSInteger)numberOfPages{
    if(_bannerArray){
        return _bannerArray.count;
    }else{
        return 0;
    }
}

- (UIView *)pageAtIndex:(NSInteger)index{
    
    BranchBannerVo *VO = _bannerArray[index];
    
    UIView *bannerView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, APP_W - 14.0f, 93.0f)];
    bannerView.backgroundColor = RGBHex(qwColor11);
    
    UIImageView *imageView = [[UIImageView alloc]initWithFrame:CGRectMake(0, 8, APP_W - 14.0f, 85.0f)];
    [imageView setImageWithURL:[NSURL URLWithString:VO.imgUrl] placeholderImage:[UIImage imageNamed:@"img_banner_nomal"]];
    [bannerView addSubview:imageView];
    
    
    return bannerView;
}


#pragma mark - 全部商品按钮Action
- (IBAction)allPromotionAction:(id)sender {
    
    [QWGLOBALMANAGER statisticsEventId:@"x_yfsy_sp" withLable:@"药房首页-商品" withParams:nil];
    
    if(_selectedBlock){
        _selectedBlock(self.branchId);
    }
}

#pragma mark - 咨询按钮Action
- (IBAction)branchChatAction:(id)sender {
    
    [QWGLOBALMANAGER statisticsEventId:@"x_yfsy_zx" withLable:@"药房首页-咨询" withParams:nil];
    
    if(!QWGLOBALMANAGER.loginStatus) {
        LoginViewController *loginViewController = [[LoginViewController alloc] initWithNibName:@"LoginViewController" bundle:nil];
        [self.navigation pushViewController:loginViewController animated:YES];
        return;
    }
    //咨询按钮点击逻辑，fixed at V3.2.0 by lijian
    if(branchDetail == nil || (![branchDetail.online boolValue] && !branchDetail.hasExpert)){
        //药房既无药师也没有砖家，toast提示
        [SVProgressHUD showErrorWithStatus:@"本店暂无法为您提供咨询服务"];
        return;
    }
    
    if(branchDetail.hasExpert){//药房下有砖家，跳转咨询选择中转页面
        
               
    }else{//药房下无砖家，直接跳转点对点聊天
        
        ChatViewController *chatVC = [[UIStoryboard storyboardWithName:@"ChatViewController" bundle:[NSBundle mainBundle]] instantiateViewControllerWithIdentifier:@"ChatViewController"];
        chatVC.sendConsultType = Enum_SendConsult_Common;
        chatVC.branchId = branchDetail.id;
        if(StrIsEmpty(branchDetail.shortName)){
            chatVC.branchName = branchDetail.name;
        }else{
            chatVC.branchName = branchDetail.shortName;
        }
        [self.navigation pushViewController:chatVC animated:YES];
    }
    
}


#pragma mark - 去掉UItableview headerview黏性
- (void)scrollViewDidScroll:(UIScrollView *)scrollView {
    if (scrollView == self.mainTableView)
    {
        CGFloat sectionHeaderHeight = 46.0f;
        if (scrollView.contentOffset.y<=sectionHeaderHeight&&scrollView.contentOffset.y>=0) {
            scrollView.contentInset = UIEdgeInsetsMake(-scrollView.contentOffset.y, 0, 0, 0);
        } else if (scrollView.contentOffset.y>=sectionHeaderHeight) {
            scrollView.contentInset = UIEdgeInsetsMake(-sectionHeaderHeight, 0, 0, 0);
        }
    }
}

#pragma mark - UITableViewDataSource
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    
    //section算法：优惠商品+优惠套餐+换购+分类N个+优惠券
    return 4 + _otherProuctArray.count;

}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    
    switch (section) {
        case 0://优惠商品
        {
            if(_promotionArray && _promotionArray.count > 0){
                return _promotionArray.count;
            }else{
                return 0;
            }
        }
            break;
        case 1://优惠套餐
        {
            if(branchIndexData.combos.count > 0){
                return 1;
            }else{
                return 0;
            }
        }
            break;
        case 2://换购
            return branchIndexData.redemptions.count;
            break;
        default:
        {
            if(section == 3 + _otherProuctArray.count){//优惠券
                return _couponQuanList.count;
            }else{//分类二维数据
                CategoryVo *VO = _otherProuctArray[section - 3];
                
                return VO.products.count;
            }
        }
            break;
    }
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    if(indexPath.section == 1){
        return (APP_W - 62)/2 + 214;
    }else if(indexPath.section == (3 + _otherProuctArray.count)){
        return [VFourCouponQuanTableViewCell getCellHeight:nil];
    }else{
        return [BranchPromotionTableViewCell getCellHeight];
    }
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    if(indexPath.section == 1){

        UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
        cell.clipsToBounds = YES;
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        for(UIView *view in cell.subviews){
            if([view isEqual:pkScrollView]){
                [view removeFromSuperview];
            }
        }
        
        [cell addSubview:pkScrollView];
        
        return cell;
    
    }else if(indexPath.section == (3 + _otherProuctArray.count)){
        
        VFourCouponQuanTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CouponCellIdentifier];
        
        OnlineCouponVoModel *model = _couponQuanList[indexPath.row];
        
        [cell setCouponCenterQuan:model];
        
        return cell;
       
    }else{
        BranchPromotionTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:PromotionCellIdentifier];
        
        switch (indexPath.section) {
            case 0://优惠商品
            {
                BranchProductVo *ProductVO = _promotionArray[indexPath.row];
                [cell setPromotionCell:ProductVO];
            }
                break;
            case 2://换购
            {
                RedemptionVo *RedemptionVO = branchIndexData.redemptions[indexPath.row];
                [cell setRedemptionCell:RedemptionVO];
            }
                break;
            default://药品分类二维数组
            {
                CategoryVo *VO = _otherProuctArray[indexPath.section - 3];

                BranchProductVo *ProductVO = VO.products[indexPath.row];
                [cell setCategoryCell:ProductVO];
            }
                break;
        }

        return cell;
    }
    
}

#pragma mark - UITableViewDelegate
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    
    switch (section) {
        case 0://优惠商品
            if(_promotionArray && _promotionArray.count > 0){
                return 46.0f;
            }else{
                return 0.0f;
            }
            break;
        case 1://优惠套餐
        {
            if(branchIndexData.combos.count > 0){
                return 46.0f;
            }else{
                return 0.0f;
            }
        }
            break;
        case 2://换购
        {
            if(branchIndexData.redemptions.count > 0){
                return 46.0f;
            }else{
                return 0.0f;
            }
        }
            break;
        default:
        {
            if(section == 3 + _otherProuctArray.count){//优惠券
                
                if(_couponQuanList.count > 0){
                    return 46.0f;
                }else{
                    return 0.0f;
                }
            }else{//分类二维数据
                CategoryVo *VO = _otherProuctArray[section - 3];
                
                if(VO.products.count > 0){
                    return 46.0f;
                }else{
                    return 0.0f;
                }
            }
        }
            break;
    }
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    
    switch (section) {
        case 0://优惠商品
            if(_promotionArray && _promotionArray.count > 0){
                return [CustomHeaderView getViewWithTitle:@"优惠商品"];
            }else{
                return nil;
            }
            break;
        case 1://优惠套餐
        {
            if(branchIndexData.combos.count > 0){
                return [CustomHeaderView getViewWithTitle:@"优惠套餐"];
            }else{
                return nil;
            }
        }
            break;
        case 2://换购
        {
            if(branchIndexData.redemptions.count > 0){
                return [CustomHeaderView getViewWithTitle:@"换购"];
            }else{
                return nil;
            }
        }
            break;
        default:
        {
            if(section == 3 + _otherProuctArray.count){//优惠券
                
                if(_couponQuanList.count > 0){
                    return [CustomHeaderView getViewWithTitle:@"优惠券"];
                }else{
                    return nil;
                }
            }else{//分类二维数据
                CategoryVo *VO = _otherProuctArray[section - 3];

                if(VO.products.count > 0){
                    return [CustomHeaderView getViewWithTitle:VO.categoryName];
                }else{
                    return nil;
                }
            }
        }
            break;
    }

}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    switch (indexPath.section) {
        case 0://优惠商品
        {
            BranchProductVo *VO = _promotionArray[indexPath.row];
            [self pushMedicineDetailWithId:VO.id];
        }
            break;
        case 1://套餐
        {
            return;
        }
            break;
        case 2://换购
        {
            RedemptionVo *RedemptionVO = branchIndexData.redemptions[indexPath.row];
            [self pushMedicineDetailWithId:RedemptionVO.branchProId];
        }
            break;

        default:
        {
            if(indexPath.section == 3 + _otherProuctArray.count){//优惠券
                
                [self selectCoupon:indexPath];
                
            }else{//分类二维数据
                
                CategoryVo *VO = _otherProuctArray[indexPath.section - 3];
                BranchProductVo *ProductVO = VO.products[indexPath.row];
                [self pushMedicineDetailWithId:ProductVO.id];
            }
        }
            return;
            break;
    }
}

#pragma mark - 优惠券Action
- (void)selectCoupon:(NSIndexPath *)indexPath{
    
    OnlineCouponVoModel *model = _couponQuanList[indexPath.row];
    
    [QWGLOBALMANAGER statisticsEventId:@"x_yfxq_yhq" withLable:@"药房详情" withParams:[NSMutableDictionary dictionaryWithDictionary:@{@"优惠券内容":model.couponRemark}]];
    
//    CouponTicketDetailViewController *vcDetail = [[UIStoryboard storyboardWithName:@"CouponTicket" bundle:nil] instantiateViewControllerWithIdentifier:@"CouponTicketDetailViewController"];
//    vcDetail.typeMall = @"3";
//    vcDetail.isComefrom = @"2";
//    vcDetail.couponVoModel = model;
//    [vcDetail setupCouponTicketDetailWithCouponId:model.couponId showSuitablePhar:NO];
    
    CenterCouponDetailViewController *vcDetail =[[CenterCouponDetailViewController alloc] initWithNibName:@"CenterCouponDetailViewController" bundle:nil];
    vcDetail.couponId=model.couponId;
    [self.navigation pushViewController:vcDetail animated:YES];
}

#pragma mark - 接收Notification
- (void)getNotifType:(Enum_Notification_Type)type data:(id)data target:(id)obj{
    
    if(type == NotifBranchDetailRequestSuccess){
        
        branchDetail = (BranchDetailVO *)data;
    }
    
    if(type == NOtifCouponStatusChanged) {
        [_mainTableView reloadData];
    }
}

#pragma mark - 商品详情跳转
- (void)pushMedicineDetailWithId:(NSString *)branchProId{
    
    [QWGLOBALMANAGER statisticsEventId:@"x_yfsy_sysp" withLable:@"药房首页-所有商品点击" withParams:nil];
    
    MedicineDetailViewController *medicintDetail = [[MedicineDetailViewController alloc]initWithNibName:@"MedicineDetailViewController" bundle:nil];
    medicintDetail.lastPageName = @"药房详情首页";
    medicintDetail.proId = branchProId;
    [self.navigation pushViewController:medicintDetail animated:YES];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end

#pragma mark - CustomHeaderView
@implementation CustomHeaderView

+ (CustomHeaderView *)getViewWithTitle:(NSString *)title{
    
    NSBundle *bundle = [NSBundle mainBundle];
    NSArray *xibArray = [bundle loadNibNamed:@"PharmacyMainViewController" owner:nil options:nil];
    for(UIView *view in xibArray){
        if([view isKindOfClass:[CustomHeaderView class]]){
            
            CustomHeaderView * customView = (CustomHeaderView *)view;
            customView.mainLabel.text = title;
            return customView;
        }
    }
    return nil;
}

- (void)awakeFromNib{
    [super awakeFromNib];
    
}

@end